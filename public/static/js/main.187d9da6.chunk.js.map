{"version":3,"sources":["logo.png","utils/cardStyles.js","components/LaunchItem.js","components/UI/loader.js","components/missionKey.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","textAlign","display","flexDirection","alignItems","bullet","marginRight","transform","title","fontSize","subtitle","success","color","fail","expand","marginLeft","transition","expandOpen","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","history","classes","className","Card","CardContent","Typography","gutterBottom","clsx","pos","format","CardActions","Button","variant","size","onClick","push","loader","MissionKey","LAUNCHES_QUERY","gql","Launches","console","log","query","loading","error","data","Grid","container","spacing","justifyContent","launches","map","item","sm","xs","md","LAUNCH_QUERY","Launch","match","params","parseInt","bull","useState","expanded","setExpanded","handleExpandClick","goBack","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","links","video_link","wikipedia","details","href","target","IconButton","Collapse","in","timeout","unmountOnExit","paragraph","client","ApolloClient","uri","withRouter","props","src","logo","alt","style","width","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187d9da6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100%\",\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    marginRight: \"2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 32,\n  },\n  subtitle: {\n    fontSize: 28,\n  },\n  success: {\n    color: 'green'\n  },\n  fail: {\n    color: 'red'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: '300ms'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n});\n\nexport default useStyles;\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\n\n//Material UI\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\n\nimport useStyles from \"../utils/cardStyles\";\n\nfunction LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n  history,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <div className=\"center\">\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              Mission:{\" \"}\n              <span\n                className={clsx({\n                  [classes.success]: launch_success,\n                  [classes.fail]: !launch_success,\n                })}\n              >\n                {mission_name}\n              </span>\n            </Typography>\n\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Date:{\" \"}\n              <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n            </Typography>\n          </CardContent>\n\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"medium\"\n              onClick={() => history.push(`/launch/${flight_number}`)}\n            >\n              Launch Details\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n      <br />\n    </Fragment>\n  );\n}\n\nexport default LaunchItem;\n","import React from \"react\";\nimport './loader.css'\n\nfunction loader() {\n  return <div className=\"loader\"></div>;\n}\n\nexport default loader;\n","export default function MissionKey() {\n  return (\n    <div className=\"mt-1\">\n      <p>\n        <span className=\"success-box\" /> = Success\n      </p>\n      <br />\n      <p>\n        <span className=\"fail-box\" /> = Fail\n      </p>\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\n\nimport LaunchItem from \"./LaunchItem\";\nimport Spinner from \"../components/UI/loader\";\nimport MissionKey from \"./missionKey\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nfunction Launches({ history }) {\n  console.log(history);\n  return (\n    <div>\n      <h1 className=\"mb-1 mt-2\">Launches</h1>\n\n      <div className=\"mb-1\">\n        <MissionKey />\n      </div>\n\n      <Query query={LAUNCHES_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <Spinner />;\n          if (error) console.log(error);\n          return (\n            <Fragment>\n              <Grid container spacing=\"4\" justifyContent=\"space-around\">\n                {data &&\n                  data.launches.map((launch) => (\n                    <Grid item sm={12} xs={12} md={6}>\n                      <LaunchItem\n                        key={launch.flight_number}\n                        launch={launch}\n                        history={history}\n                      />\n                    </Grid>\n                  ))}\n              </Grid>\n            </Fragment>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default Launches;\n","import { Fragment, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport Spinner from \"../components/UI/loader\";\nimport clsx from \"clsx\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport useStyles from \"../utils/cardStyles\";\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n      links {\n        video_link\n        wikipedia\n      }\n      details\n    }\n  }\n`;\nfunction Launch({ history, match }) {\n  let { flight_number } = match.params;\n  flight_number = parseInt(flight_number);\n\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  // Accordion\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"mt-2 mb-1\">\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            onClick={() => history.goBack()}\n          >\n            <ArrowBackIcon /> Go Back\n          </Button>\n        </div>\n\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <Spinner />;\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type },\n              links: { video_link, wikipedia },\n              details,\n            } = data.launch;\n\n            console.log(launch_success);\n            return (\n              <div className=\"center\">\n                <Card className={classes.root}>\n                  <CardContent>\n                    <Typography\n                      className={classes.title}\n                      color=\"textPrimary\"\n                      gutterBottom\n                    >\n                      Mission: {mission_name}\n                    </Typography>\n\n                    <Typography\n                      className={classes.subtitle}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Launch Details\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Flight Number: {flight_number}\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Launch Year: {launch_year}\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Launch Successful: {launch_success ? \"Yes\" : \"No\"}\n                    </Typography>\n                  </CardContent>\n\n                  <CardContent>\n                    <Typography\n                      className={classes.subtitle}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Rocket Details\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Rocket ID: {rocket_id}\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Rocket Name: {rocket_name}\n                    </Typography>\n\n                    <Typography variant=\"h5\">\n                      {bull} Rocket Type: {rocket_type}\n                    </Typography>\n                  </CardContent>\n\n                  <CardActions>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"medium\"\n                      href={video_link}\n                      target=\"_blank\"\n                    >\n                      <YouTubeIcon /> Watch on Youtube\n                    </Button>\n\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      size=\"medium\"\n                      href={wikipedia}\n                      target=\"_blank\"\n                    >\n                      Learn More <LaunchIcon />\n                    </Button>\n\n                    {details && (\n                      <IconButton\n                        className={clsx(classes.expand, {\n                          [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"Show More\"\n                      >\n                        <ExpandMoreIcon />\n                      </IconButton>\n                    )}\n                  </CardActions>\n\n                  <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                      <Typography paragraph>Details:</Typography>\n                      <Typography paragraph>\n                        {console.log(details)}\n                        {details}\n                      </Typography>\n                    </CardContent>\n                  </Collapse>\n                </Card>\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Launch;\n\n/*\n\n*/\n","import ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nimport logo from \"./logo.png\";\nimport \"./App.css\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: \"/api/graphql\",\n});\n\nfunction App(props) {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"container\">\n        <div className=\"logo\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: \"block\", margin: \"auto\" }}\n          />\n        </div>\n        <Route exact path=\"/\" component={Launches} />\n        <Route exact path=\"/launch/:flight_number\" component={Launch} />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}